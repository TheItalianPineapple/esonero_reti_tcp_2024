/*
 ============================================================================
 Name        : client.c
 Author      : johnni_gallo
 Version     : 1.0
 Description : Esonero Reti 2024
 ============================================================================
 */

#include <stdio.h>
#include <winsock2.h>
#include <stdlib.h>
#include <string.h>

// Include Header
#include "protocol.h"

static int handle_user_input(SOCKET server_socket);
static void print_menu(void);

// Function To Manage Input
static int handle_user_input(SOCKET server_socket) {
    char input[BUFFER];  // Input Var
    char password[BUFFER]; // Password Buffer
    int bytes_rec;

    // Explanation Of Server's Use
    print_menu();
    fgets(input, sizeof(input), stdin);
    input[strcspn(input, "\n")] = 0;  // Remove newline character

    // Check If There's Any Errors Reading Input
    if (fgets(input, sizeof(input), stdin) == NULL) {
            printf("Error reading input\n");
            return 0;
        }

    // If User Types 'q', Quit
    if (strcmp(input, "q") == 0) {
        send(server_socket, "q", 1, 0);  // Let Server Know Client Is Quitting
        printf("Goodbye!\n");
        return 1;
    }

    // Send The Input To Server
    if (send(server_socket, input, strlen(input), 0) == SOCKET_ERROR) {
        printf("Error sending data to the server\n");
        return 0; // Return 0 If Error Is Caught
    }


    // Receive Data From Server
    bytes_rec = recv(server_socket, password, sizeof(password) - 1, 0);
    if (bytes_rec<=0) {
        printf("Error receiving answer from server\n");
        return 0; //Return 0 If Error Is Caught
    }
    password[bytes_rec] = '\0'; // Null Terminate The String

    printf("Generated password: %s\n", password);
    return 0; // Continue The Loop
}

static void print_menu(void) {
    printf("\n=== Password Generator ===\n");
    printf("Enter type and length (e.g., 'n 10' for 10-digit numeric password)\n");
    printf("Types available:\n");
    printf("  n - Numeric (0-9)\n");
    printf("  a - Alphabetic (a-z)\n");
    printf("  m - Mixed (alphanumeric)\n");
    printf("  s - Secure (includes special characters)\n");
    printf("  q - Quit\n");
    printf("Length must be between 6-32\n");
    printf(">>> ");
}
